var ngms;!function(e){"use strict"}(ngms||(ngms={}));var ngms;!function(e){"use strict";var t=angular.module("ngms",[]),s=function(){function e(e,t){this.$subscriptions={},this.$messageService=t,this.$channelName=e}return e.prototype.getName=function(){return this.$channelName},e.prototype.publishSync=function(e){this.$messageService.publishSync(this.$channelName,e)},e.prototype.publish=function(e){return this.$messageService.publish(this.$channelName,e)},e.prototype.subscribe=function(e,t){var s=this.$messageService.subscribe(this.$channelName,e,t);return this.$subscriptions[s.tokenId]=s,s},e.prototype.unsubscribeAll=function(){for(var e in this.$subscriptions)this.unsubscribe(this.$subscriptions[e]);this.$subscriptions={}},e.prototype.unsubscribe=function(e){if(e){if(e.channelName!==this.$channelName)throw new Error("You can only unsubscribe tokens related to channel "+this.$channelName);this.$messageService.unsubscribe(e),delete this.$subscriptions[e.tokenId]}},e}(),n=function(){function e(e,t){this.$simpleSubscribers={},this.$patternSubscribers={},this.$patternRegex={},this.$allSubscribers=[],this.$timeout=e,this.$q=t}return e.prototype.getSimpleSubs=function(e){return this.$simpleSubscribers[e]=this.$simpleSubscribers[e]||[],this.$simpleSubscribers[e]},e.prototype.getPatternSubs=function(e){return this.$patternSubscribers[e]=this.$patternSubscribers[e]||[],this.$patternSubscribers[e]},e.prototype.publishSync=function(e,t){var s=this.getSubscriptions(e);this.$publish(s,t,e,this)},e.prototype.publish=function(e,t){var s=this,n=this.getSubscriptions(e),r=this.$q.defer();return s.$timeout(function(){try{s.$publish(n,t,e,s),r.resolve()}catch(i){r.reject(i)}},0),r.promise},e.prototype.$publish=function(e,t,s,n){e.forEach(function(e){e.callback(t,s),e.oneTime&&n.removeToken(e.token)})},e.prototype.subscribe=function(e,t,s){var n,r,i=this,c=this.generateUUID(),a={channelName:e,tokenId:c};if(r={token:a,callback:t,oneTime:!!s},"*"===e)n=this.$allSubscribers;else if(-1===e.indexOf("*"))n=this.getSimpleSubs(e);else{r.oneTime=!1;var o=this.$patternRegex[e];o||(o=new RegExp(e.replace(/\*/g,".*").replace(/\./g,"\\."),"i"),this.$patternRegex[e]=o),n=this.getPatternSubs(e),r.matchedChannels=this.getMatchedChannels(o),r.matchedChannels.forEach(function(e){var t=i.getSimpleSubs(e);t.push(r)})}return n.push(r),a},e.prototype.getMatchedChannels=function(e){return Object.keys(this.$simpleSubscribers).filter(function(t){return e.test(t)})},e.prototype.getSubscriptions=function(e){var t=angular.copy(this.getSimpleSubs(e));if(0===t.length){var s=this.getMatchedPatSubs(e);s.forEach(function(s){s.matchedChannels.push(e),t.push(s)})}return this.$allSubscribers.length>0?t.concat(this.$allSubscribers):t},e.prototype.getMatchedPatSubs=function(e){var t=this,s=[];return Object.keys(this.$patternSubscribers).forEach(function(n){var r=t.$patternRegex[n];r.test(e)&&(s=s.concat(t.$patternSubscribers[n]))}),s},e.prototype.removeToken=function(e){var t,s=this;if("*"===e.channelName)t=this.$allSubscribers;else{if(-1!==e.channelName.indexOf("*")){var n=this.getPatternSubs(e.channelName),r=n.filter(function(t){return t.token.tokenId===e.tokenId?(t.matchedChannels.forEach(function(e){s.removeToken({channelName:e,tokenId:t.token.tokenId})}),!1):!0});return void(0===r.length?delete this.$simpleSubscribers[e.channelName]:this.$patternSubscribers[e.channelName]=r)}t=this.getSimpleSubs(e.channelName)}var i=t.filter(function(t){return t.token.tokenId!==e.tokenId});0===i.length?delete this.$simpleSubscribers[e.channelName]:this.$simpleSubscribers[e.channelName]=i},e.prototype.generateUUID=function(){var e=(new Date).getTime(),t="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(t){var s=(e+16*Math.random())%16|0;return e=Math.floor(e/16),("x"===t?s:3&s|8).toString(16)});return t},e}(),r=function(){function e(e,t){this.$registry=new n(e,t)}return e.$inject=["$timeout","$q"],e.prototype.getChannel=function(e){return new s(e,this)},e.prototype.publishSync=function(e,t){if(-1!==e.indexOf("*"))throw new Error("Invalid channel name. You must specify a channel name without wilcards.");var s=this.$ensureMessage(t);return this.$registry.publishSync(e,s)},e.prototype.publish=function(e,t){if(-1!==e.indexOf("*"))throw new Error("Invalid channel name. You must specify a channel name without wilcards.");var s=this.$ensureMessage(t);return this.$registry.publish(e,s)},e.prototype.$ensureMessage=function(e){var t;return e?"string"==typeof e?t={data:e,$msgId:this.$registry.generateUUID()}:(t=e,t.$msgId=this.$registry.generateUUID()):t={$msgId:""},t},e.prototype.subscribe=function(e,t,s){return this.$registry.subscribe(e,t,s)},e.prototype.unsubscribe=function(e){this.$registry.removeToken(e)},e.prototype.getServiceStats=function(){var e={},t=this;return e.simpleChannels=Object.keys(this.$registry.$simpleSubscribers).length,e.patternChannels=Object.keys(this.$registry.$patternSubscribers).length,e.globalSubscriptions=this.$registry.$allSubscribers.length,e.totalSubscriptions=0,e.channels=[],Object.keys(this.$registry.$simpleSubscribers).forEach(function(s){var n=t.$registry.$simpleSubscribers[s],r={};r.name=s,r.totalSubscriptions=n.length,e.totalSubscriptions+=r.totalSubscriptions,e.channels.push(r)}),e.totalButGlobalSubscriptions=e.totalSubscriptions,e.totalSubscriptions+=this.$registry.$allSubscribers.length,e.patternSubscriptions=0,e.patternChannels=[],Object.keys(this.$registry.$patternSubscribers).forEach(function(s){var n=t.$registry.$patternSubscribers[s],r={};r.name=s,r.totalSubscriptions=n.length,r.channelsMatched=n[0].matchedChannels,e.patternSubscriptions+=r.totalSubscriptions,e.patternSubscriptions.push(r)}),e},e}();t.service("ngmsMessageService",r)}(ngms||(ngms={}));