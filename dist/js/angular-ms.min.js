var ngms;!function(t){"use strict"}(ngms||(ngms={}));var ngms;!function(t){"use strict";var e=angular.module("ngms",[]),s=function(){function t(t,e){this.$subscriptions={},this.$messageService=e,this.$channelName=t}return t.prototype.getName=function(){return this.$channelName},t.prototype.publishSync=function(t){this.$messageService.publishSync(this.$channelName,t)},t.prototype.publish=function(t){return this.$messageService.publish(this.$channelName,t)},t.prototype.subscribe=function(t,e){var s=this.$messageService.subscribe(this.$channelName,t,e);return this.$subscriptions[s.tokenId]=s,s},t.prototype.unsubscribeAll=function(){for(var t in this.$subscriptions)this.unsubscribe(this.$subscriptions[t]);this.$subscriptions={}},t.prototype.unsubscribe=function(t){if(t){if(t.channelName!==this.$channelName)throw new Error("You can only unsubscribe tokens related to channel "+this.$channelName);this.$messageService.unsubscribe(t),delete this.$subscriptions[t.tokenId]}},t}(),n=function(){function t(t,e){this.$simpleSubscribers={},this.$patternSubscribers={},this.$patternRegex={},this.$allSubscribers=[],this.$timeout=t,this.$q=e}return t.prototype.getSimpleSubs=function(t){return this.$simpleSubscribers[t]=this.$simpleSubscribers[t]||[],this.$simpleSubscribers[t]},t.prototype.getPatternSubs=function(t){return this.$patternSubscribers[t]=this.$patternSubscribers[t]||[],this.$patternSubscribers[t]},t.prototype.publishSync=function(t,e){var s=this.getSubscriptions(t);s.forEach(function(s){s.callback(e,t)})},t.prototype.publish=function(t,e){var s=this,n=this.getSubscriptions(t);return new this.$q(function(){s.$timeout(function(){n.forEach(function(s){s.callback(e,t)})},0)})},t.prototype.subscribe=function(t,e,s){var n,r,i=this,c=this.generateUUID(),a={channelName:t,tokenId:c};if(r={token:a,callback:e,oneTime:!!s},t="*")n=this.$allSubscribers;else if(-1===t.indexOf("*"))n=this.getSimpleSubs(t);else{r.oneTime=!1;var o=this.$patternRegex[t];o||(o=new RegExp(t.replace(/\*/g,".*").replace(/\./g,"\\."),"i"),this.$patternRegex[t]=o),n=this.getPatternSubs(t),r.matchedChannels=this.getMatchedChannels(o),r.matchedChannels.forEach(function(t){var e=i.getSimpleSubs(t);e.push(r)})}return n.push(r),a},t.prototype.getMatchedChannels=function(t){return Object.keys(this.$simpleSubscribers).filter(function(e){return t.test(e)})},t.prototype.getSubscriptions=function(t){var e=this.getSimpleSubs(t);if(0===e.length){var s=this.getMatchedPatSubs(t);s.forEach(function(s){s.matchedChannels.push(t),e.push(s)})}return e.concat(this.$allSubscribers)},t.prototype.getMatchedPatSubs=function(t){var e=this,s=[];return Object.keys(this.$patternSubscribers).forEach(function(n){var r=e.$patternRegex[n];r.test(t)&&(s=s.concat(e.$patternSubscribers[n]))}),s},t.prototype.removeToken=function(t){var e,s=this;if(t.channelName="*")e=this.$allSubscribers;else{if(-1!==t.channelName.indexOf("*")){var n=this.getPatternSubs(t.channelName),r=n.filter(function(e){return e.token.tokenId===t.tokenId?(e.matchedChannels.forEach(function(t){s.removeToken({channelName:t,tokenId:e.token.tokenId})}),!1):!0});return void(0===r.length?delete this.$simpleSubscribers[t.channelName]:this.$patternSubscribers[t.channelName]=r)}e=this.getSimpleSubs(t.channelName)}var i=e.filter(function(e){return e.token.tokenId!==t.tokenId});0===i.length?delete this.$simpleSubscribers[t.channelName]:this.$simpleSubscribers[t.channelName]=i},t.prototype.generateUUID=function(){var t=(new Date).getTime(),e="xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,function(e){var s=(t+16*Math.random())%16|0;return t=Math.floor(t/16),("x"===e?s:3&s|8).toString(16)});return e},t}(),r=function(){function t(t,e){this.$registry=new n(t,e)}return t.prototype.getChannel=function(t){return new s(t,this)},t.prototype.publishSync=function(t,e){if(-1!==t.indexOf("*"))throw new Error("Invalid channel name. You must specify a channel name without wilcards.");var s=this.$ensureMessage(e);return this.$registry.publishSync(t,s)},t.prototype.publish=function(t,e){if(-1!==t.indexOf("*"))throw new Error("Invalid channel name. You must specify a channel name without wilcards.");var s=this.$ensureMessage(e);return this.$registry.publish(t,s)},t.prototype.$ensureMessage=function(t){var e;return t?"string"==typeof t?e={data:t,$msgId:this.$registry.generateUUID()}:(e=t,e.$msgId=this.$registry.generateUUID()):e={$msgId:""},e},t.prototype.subscribe=function(t,e,s){return this.$registry.subscribe(t,e,s)},t.prototype.unsubscribe=function(t){this.$registry.removeToken(t)},t.prototype.getServiceStats=function(){var t={},e=this;return t.totalChannels=Object.keys(this.$registry.$simpleSubscribers).length,t.totalSubscriptions=0,t.channels=[],Object.keys(this.$registry.$simpleSubscribers).forEach(function(s){var n=e.$registry.$simpleSubscribers[s],r={};r.name=s,r.totalSubscriptions=n.length,t.totalSubscriptions+=r.totalSubscriptions,t.channels.push(r)}),t.totalSubscriptions+=this.$registry.$allSubscribers.length,t.globalSubscriptions=this.$registry.$allSubscribers.length,t.patternSubscriptions=[],Object.keys(this.$registry.$patternSubscribers).forEach(function(s){var n=e.$registry.$patternSubscribers[s],r={};r.name=s,r.totalSubscriptions=n.length,r.channelsMatched=n[0].matchedChannels,t.totalSubscriptions+=r.totalSubscriptions,t.patternSubscriptions.push(r)}),t},t}();e.service("ngmsMessageService",r)}(ngms||(ngms={}));